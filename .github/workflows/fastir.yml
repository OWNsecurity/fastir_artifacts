name: FastIR

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
        python-version: ['3.9']
        arch: [x86]
        include:
          - os: ubuntu-latest
            arch: x64
            python-version: '3.9'
          - os: macos-latest
            arch: x64
            python-version: '3.9'
    steps:
      - name: Use FastIR repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}
      - name: install dependencies  
        run: |
          pip install -U -r requirements.txt
          pip install -U -r requirements-test.txt
      - name: run tests
        run: |
          python -m pytest --cov-report xml --cov fastir tests
          pyinstaller fastir_artifacts.spec
          python -m pytest integration_tests
          python -m zipfile -c FastIR-Artifacts-${{ runner.os }}-${{ matrix.arch }}.zip dist/fastir_artifacts
      - name: Upload result
        uses: actions/upload-artifact@v2
        with:
          name: FastIR-Artifacts-${{ runner.os }}-${{ matrix.arch }}.zip
          path: FastIR-Artifacts-${{ runner.os }}-${{ matrix.arch }}.zip
  deploy:
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDD-HHmm
      - name: Download artifacts
        id: download-artifacts
        uses: actions/download-artifact@v2
      - name: test
        run: |
          ls ${{steps.download-artifacts.outputs.download-path}}
      - name: Create Release
        uses: "softprops/action-gh-release@v1"
        if: startsWith(github.ref, '')
        with:
          fail_on_unmatched_files: true
          draft: true
          prerelease: true
          generate_release_notes: true
          name: Release ${{ steps.current-time.outputs.formattedTime }}-${{ github.sha }}
          files: ${{steps.download-artifacts.outputs.download-path}}/*.zip
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          title: "Release ${{ steps.current-time.outputs.formattedTime }}-${{ github.sha }}"
          prerelease: false
          draft: true
          files: ${{steps.download-artifacts.outputs.download-path}}/*.zip
