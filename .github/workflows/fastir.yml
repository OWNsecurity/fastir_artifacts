name: FastIR

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    outputs:
      tag: ${{ steps.release-creation.outputs.automatic_releases_tag }}
    steps:
      - name: Get current time
        uses: 1466587594/get-current-time@v2.0.2
        id: current-time
        with:
          format: YYYYMMDD-HHmm
      - name: Create release
        uses: "marvinpinto/action-automatic-releases@latest"
        id: release-creation
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          title: "Release ${{ steps.current-time.outputs.formattedTime }}-${{ github.sha }}"
          prerelease: false
          draft: false
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
        python-version: ['3.11']
        arch: [x86, x64]
        include:
          - os: ubuntu-latest
            arch: x64
            python-version: '3.11'
          - os: macos-latest
            arch: x64
            python-version: '3.11'
    steps:
      - name: Use FastIR repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}
      - name: Install windows compiler
        run: |
          choco install mingw make oraclejdk
        if: runner.os == 'windows'
      - name: Install Dependencies
        run: |
          python -m pip install --use-pep517 -U -r requirements.txt
          python -m pip install --use-pep517 -U -r requirements-test.txt
        timeout-minutes: 60
      - name: run tests & build
        run: |
          python -m pytest --cov-report xml --cov fastir tests
          pyinstaller fastir_artifacts.spec
      - name: run tests & zip
        run: |
          python -m pytest integration_tests
          python -m zipfile -c FastIR-Artifacts-${{ runner.os }}-${{ matrix.arch }}.zip dist/fastir_artifacts
      - name: Archive build results
        uses: actions/upload-artifact@v3
        if: github.event_name == 'push' && !contains(github.ref, 'master')
        with:
          name: FastIR-Artifacts-${{ runner.os }}-${{ matrix.arch }}
          path: FastIR-Artifacts-${{ runner.os }}-${{ matrix.arch }}.zip
      - name: Upload asset
        uses: AButler/upload-release-assets@v2.0
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        with:
          files: FastIR-Artifacts-${{ runner.os }}-${{ matrix.arch }}.zip
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ needs.release.outputs.tag }}
